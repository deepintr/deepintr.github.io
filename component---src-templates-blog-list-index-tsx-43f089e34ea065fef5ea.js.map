{"version":3,"sources":["webpack:///./src/components/Pagination/index.tsx","webpack:///./src/templates/BlogList/styles.ts","webpack:///./src/templates/BlogList/index.tsx","webpack:///./src/components/Bulma/Breadcrumb/index.tsx"],"names":["Pagination","prev","next","className","role","aria-label","styles","useStyles","createUseStyles","blogListQuery","BlogListTemplate","data","pageContext","posts","location","allMarkdownRemark","edges","map","e","node","currentPage","numPages","pathPrefix","isFirst","isLast","prevPage","toString","nextPage","breadcrumbItems","name","url","href","push","Main","SEO","title","Box","Breadcrumb","items","Columns","Column","PageContent","post","Post","key","fields","slug","to","rel","parts","i","clsx","length"],"mappings":"2FAAA,yBAgBeA,IAT+B,SAAC,GAAmB,IAAjBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACrD,OACE,yBAAKC,UAAU,aAAaC,KAAK,aAAaC,aAAW,cACvD,8BAAOJ,GAAQA,GACf,8BAAOC,GAAQA,M,wQCPNI,EAFQ,GCajBC,EAAYC,0BAAgBF,GAsFrBG,GAFEC,UA1EuD,SAAC,GAIjE,IAHJC,EAGI,EAHJA,KACAC,EAEI,EAFJA,YAKMC,GAHF,EADJC,SAEgBP,IAEFI,EAAKI,kBAAkBC,MAAMC,KAAI,SAACC,GAAD,OAAOA,EAAEC,SAChDC,EAAsCR,EAAtCQ,YAAaC,EAAyBT,EAAzBS,SAAUC,EAAeV,EAAfU,WACzBC,EAA0B,IAAhBH,EACVI,EAASJ,IAAgBC,EACzBI,EAAWL,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGM,WAC3DC,GAAYP,EAAc,GAAGM,WAE7BE,EAAkC,CACtC,CACEC,KAAM,OACNC,IAAK,CACHC,KAAMT,KAYZ,OAPAM,EAAgBI,KAAK,CACnBH,KAAM,SAAF,OAAWT,GACfU,IAAK,CACHC,KAAM,MAKR,kBAACE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,MAAM,SACX,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,MAAOV,KAErB,kBAACW,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACG5B,EAAMI,KAAI,SAACyB,GAAD,OACT,kBAACC,EAAA,EAAD,CAAMD,KAAMA,EAAME,IAAKF,EAAKG,OAAOC,UAGrC,kBAAC9C,EAAA,EAAD,CACEC,MACGsB,GACC,kBAAC,OAAD,CACEwB,GAAE,UAAKzB,EAAL,YAAmBG,GACrBuB,IAAI,OACJ7C,UAAU,uBAHZ,YASJD,MACGsB,GACC,kBAAC,OAAD,CACEuB,GAAE,UAAKzB,EAAL,YAAmBK,GACrBqB,IAAI,OACJ7C,UAAU,mBAHZ,oBAmBW,e,64BChEdkC,IA5B+B,SAAC,GAAc,IAAZC,EAAY,EAAZA,MACzCW,EAAwB,CAC5B,CACEpB,KAAM,WACNC,IAAK,CACHC,KAAM,OAJe,SAOtBO,IAGL,OACE,yBAAKnC,UAAU,iCAAiCE,aAAW,eACzD,4BACG4C,EAAMhC,KAAI,WAAgBiC,GAAhB,IAAGrB,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAT,OACT,wBACEc,IAAG,0BAAqBM,GACxB/C,UAAWgD,YAAK,CAAE,YAAaD,IAAMD,EAAMG,OAAS,KAGpD,kBAAC,OAAD,CAAML,GAAIjB,EAAIC,MAAOF","file":"component---src-templates-blog-list-index-tsx-43f089e34ea065fef5ea.js","sourcesContent":["import React from 'react';\n\nexport interface PaginationProps {\n  prev?: React.ReactNode;\n  next?: React.ReactNode;\n}\n\nconst Pagination: React.FC<PaginationProps> = ({ prev, next }) => {\n  return (\n    <nav className=\"pagination\" role=\"navigation\" aria-label=\"pagination\">\n      <span>{prev && prev}</span>\n      <span>{next && next}</span>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import { Styles } from 'react-jss';\n\nconst styles: Styles = {};\n\nexport default styles;\n","import React from 'react';\nimport { Link, graphql, PageProps } from 'gatsby';\nimport { createUseStyles } from 'react-jss';\nimport MainLayout from '../../layouts/Main';\nimport Columns from '../../components/Bulma/Columns';\nimport Column from '../../components/Bulma/Column';\nimport Box from '../../components/Bulma/Box';\nimport Breadcrumb from '../../components/Bulma/Breadcrumb';\nimport PageContent from '../../components/PageContent';\nimport Post from '../../components/Post';\nimport Pagination from '../../components/Pagination';\nimport SEO from '../../components/SEO';\nimport { Data, Menu } from '../../models';\nimport styles from './styles';\n\nconst useStyles = createUseStyles(styles);\n\ninterface PageContext {\n  limit: number;\n  skip: number;\n  numPages: number;\n  currentPage: number;\n  pathPrefix: string;\n}\n\nconst BlogListTemplate: React.FC<PageProps<Data.Data, PageContext>> = ({\n  data,\n  pageContext,\n  location,\n}) => {\n  const classes = useStyles();\n\n  const posts = data.allMarkdownRemark.edges.map((e) => e.node);\n  const { currentPage, numPages, pathPrefix } = pageContext;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString();\n  const nextPage = (currentPage + 1).toString();\n\n  const breadcrumbItems: Menu.NavLink[] = [\n    {\n      name: 'Blog',\n      url: {\n        href: pathPrefix,\n      },\n    },\n  ];\n\n  breadcrumbItems.push({\n    name: `Sayfa ${currentPage}`,\n    url: {\n      href: '',\n    },\n  });\n\n  return (\n    <MainLayout>\n      <SEO title=\"Blog\" />\n      <Box>\n        <Breadcrumb items={breadcrumbItems} />\n      </Box>\n      <Columns>\n        <Column>\n          <PageContent>\n            {posts.map((post) => (\n              <Post post={post} key={post.fields.slug} />\n            ))}\n\n            <Pagination\n              prev={\n                !isFirst && (\n                  <Link\n                    to={`${pathPrefix}/${prevPage}`}\n                    rel=\"prev\"\n                    className=\"pagination-previous\"\n                  >\n                    ← Önceki\n                  </Link>\n                )\n              }\n              next={\n                !isLast && (\n                  <Link\n                    to={`${pathPrefix}/${nextPage}`}\n                    rel=\"next\"\n                    className=\"pagination-next\"\n                  >\n                    Sonraki →\n                  </Link>\n                )\n              }\n            />\n          </PageContent>\n        </Column>\n      </Columns>\n    </MainLayout>\n  );\n};\n\nexport default BlogListTemplate;\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: {\n        fields: [frontmatter___pinned, frontmatter___date]\n        order: [ASC, DESC]\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          html\n          fields {\n            slug\n          }\n          frontmatter {\n            date\n            title\n            author\n            pinned\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport { Link } from 'gatsby';\nimport clsx from 'clsx';\nimport { Menu } from '../../../models';\n\nexport interface BreadcrumbProps {\n  items: Menu.NavLink[];\n}\n\nconst Breadcrumb: React.FC<BreadcrumbProps> = ({ items }) => {\n  const parts: Menu.NavLink[] = [\n    {\n      name: 'Anasayfa',\n      url: {\n        href: '/',\n      },\n    },\n    ...items,\n  ];\n\n  return (\n    <nav className=\"breadcrumb has-arrow-separator\" aria-label=\"breadcrumbs\">\n      <ul>\n        {parts.map(({ name, url }, i) => (\n          <li\n            key={`breadcrumb-item-${i}`}\n            className={clsx({ 'is-active': i === parts.length - 1 })}\n          >\n            {/* Treat the all links as internal. */}\n            <Link to={url.href}>{name}</Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Breadcrumb;\n"],"sourceRoot":""}